@model ToMoToStudy.NguoiDung

@{
    ViewBag.Title = "ChiTietNguoiDung";
    Layout = "~/Views/Shared/Admin_Layout.cshtml";
}

<div class="container-fluid" id="container-wrapper">
    <div class="d-sm-flex align-items-center justify-content-between mb-4">
        <h1 class="h3 mb-0 text-gray-800">Chi tiết tài khoản</h1>
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a href="./index">Trang chủ</a></li>
            <li class="breadcrumb-item active" aria-current="page">Chi tiết tài khoản</li>
        </ol>
    </div>

    <!-- Row -->
    <div class="row">
        <!-- DataTable with Hover -->
        <div class="col-lg-12">
            <div class="card mb-4" style="padding: 15px">
                @if (!String.IsNullOrEmpty(ViewBag.Error))
                {
                    <div class="alert alert-danger" role="alert">@ViewBag.Error</div>
                }
                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">

                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                        <div class="row">
                            <div class="col">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.IdNguoiDung, htmlAttributes: new { @class = "control-label" })
                                    <div>
                                        @Html.EditorFor(model => model.IdNguoiDung, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.IdNguoiDung, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="col">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.IdVaiTro, htmlAttributes: new { @class = "control-label" })
                                    <div>
                                        @Html.EditorFor(model => model.IdVaiTro, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.IdVaiTro, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="col">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label" })
                                    <div>
                                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                                    </div>
                                </div>


                            </div>
                        </div>
                        <div class="row">
                            <div class="col">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.TaiKhoan, htmlAttributes: new { @class = "control-label" })
                                    <div>
                                        @Html.EditorFor(model => model.TaiKhoan, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.TaiKhoan, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="col">

                                <div class="form-group">
                                    @Html.LabelFor(model => model.MatKhau, htmlAttributes: new { @class = "control-label" })
                                    <div>
                                        @Html.EditorFor(model => model.MatKhau, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.MatKhau, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.HoTen, htmlAttributes: new { @class = "control-label" })
                                    <div>
                                        @Html.EditorFor(model => model.HoTen, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.HoTen, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            @*<div class="col">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Avatar, htmlAttributes: new { @class = "control-label" })
                            <div>
                                @Html.EditorFor(model => model.Avatar, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Avatar, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>*@
                        </div>
                        <div class="form-group">
                            <div class="col-md-offset-2">
                                <input type="submit" value="Lưu" class="btn btn-primary" />
                                <button type="button" class="btn btn-danger" onclick="XoaNguoiDung(@Model.IdNguoiDung,'@Model.TaiKhoan')">Xóa</button>
                            </div>
                        </div>
                    </div>
                }

            </div>
        </div>
    </div>
    <!--Row-->  
    <div style="padding:5px;">
        @Html.ActionLink("< Quay lại danh sách", "DanhSachNguoiDung")
    </div>

</div>


<script>
    function XoaNguoiDung(id, name) {
        // hien message
        var dialog = bootbox.dialog({
            title: 'Thông báo xóa tài khoản',
            message: "<p>Bạn có muốn xóa người dùng " + name + " hay không?</p>",
            size: 'large',
            closeButton: false,
            buttons: {
                ok: {
                    label: "Có",
                    className: 'btn-info',
                    callback: function () { 
                        var dialog = bootbox.dialog({
                             closeButton: false,
                             message: '<p><i class="fa fa-spin fa-spinner"></i> Đang thực hiện...</p>'
                        });

                        dialog.init(function () {
                            setTimeout(function () {
                                location.href = "/Admin/XoaNguoiDung/" + id;
                            }, 1000);
                        });
                    }
                },
                cancel: {
                    label: "Không",
                    className: 'btn-danger',
                }
            }
        });
    }

</script>